stages:
  - version
  - build
  - publish
  - deploy:dev
  - deploy:test
  - deploy:live

before_script: # Expose version variable in all jobs
  - source $CI_PROJECT_DIR/gitversion.properties && export GitVersion_NuGetVersion

gitversion:
  stage: version
  image:
    name: gittools/gitversion:5.0.0-linux-debian-9-netcoreapp2.2
    entrypoint: []
  before_script: [] # Prevent top-level before_script from running here
  script:
    - dotnet /app/GitVersion.dll /output buildserver
  artifacts:
    paths: [gitversion.properties]

dotnet:
  stage: build
  image: mcr.microsoft.com/dotnet/core/sdk:2.2
  script:
    - ./build.sh $GitVersion_NuGetVersion
  artifacts:
    paths:
      - src/Service/obj/Docker/publish
      - artifacts/*.nupkg
    reports:
      junit: artifacts/test-results.xml

docker:
  stage: publish
  image:
    name: gcr.io/kaniko-project/executor:debug # Only "debug" works because it contains a shell
    entrypoint: []
  script:
    - /kaniko/executor --cache=true
      --context dir://$CI_PROJECT_DIR/src/Service
      --destination eu.gcr.io/axoom-image/myteam/myvendor-myservice:$GitVersion_NuGetVersion

nuget:
  stage: publish
  only: [develop, master, /^release/, /^hotfix/]
  image: mcr.microsoft.com/dotnet/core/sdk:2.2
  variables:
    ARTIFACTORY_REPO: nuget
  script:
    - dotnet nuget push artifacts/MyVendor.MyService.Dto.$GitVersion_NuGetVersion.nupkg --source https://axoom.jfrog.io/axoom/api/nuget/$ARTIFACTORY_REPO/axoom/MyVendor.MyService.Dto --api-key $ARTIFACTORY_USER:$ARTIFACTORY_API_KEY
    - dotnet nuget push artifacts/MyVendor.MyService.Client.$GitVersion_NuGetVersion.nupkg --source https://axoom.jfrog.io/axoom/api/nuget/$ARTIFACTORY_REPO/axoom/MyVendor.MyService.Client --api-key $ARTIFACTORY_USER:$ARTIFACTORY_API_KEY

nuget:experimental: # Feature branches lead to non-linear versioning and therefore go to a separate NuGet repo
  extends: nuget
  only: [/^feature/]
  variables:
    ARTIFACTORY_REPO: nuget-experimental

.deploy:
  when: manual
  image: axoom/gcloud-helmfile
  environment:
    name: $CLUSTER_NAME
    url: https://myvendor-myservice.$PUBLIC_CLUSTER_DOMAIN/swagger/
  script:
    - /entrypoint.sh

deploy:dev:
  extends: .deploy
  stage: deploy:dev
  except: [master]
  variables:
    # gcloud
    GCP_PROJECT: axoom-platform-devstages
    CLUSTER_NAME: dev
    DATABASE_NAME: myvendor-myservice
    # helmfile
    PUBLIC_CLUSTER_DOMAIN: dev.myaxoom.com
    ASPNETCORE_ENVIRONMENT: Development

deploy:dev:auto:
  extends: deploy:dev
  except: []
  only: [master]
  when: on_success

deploy:test:
  extends: .deploy
  stage: deploy:test
  variables:
    # gcloud
    GCP_PROJECT: axoom-platform-devstages
    CLUSTER_NAME: test
    DATABASE_NAME: myvendor-myservice
    # helmfile
    PUBLIC_CLUSTER_DOMAIN: test.myaxoom.com
    ASPNETCORE_ENVIRONMENT: Production

deploy:live:
  extends: .deploy
  stage: deploy:live
  variables:
    # gcloud
    GCP_PROJECT: axoom-platform-production
    CLUSTER_NAME: live
    DATABASE_NAME: myvendor-myservice
    # helmfile
    PUBLIC_CLUSTER_DOMAIN: myaxoom.com
    ASPNETCORE_ENVIRONMENT: Production
